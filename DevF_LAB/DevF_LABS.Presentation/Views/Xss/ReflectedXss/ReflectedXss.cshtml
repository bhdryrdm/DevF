<script src='https://www.google.com/recaptcha/api.js'></script>
<div class="tab-pane rootTabContent" id="reflected" role="tabpanel">
    <div class="nav-tabs-custom">
        <ul class="nav nav-tabs bg-light" role="tablist">
            <li class="nav-item"><a class="reflectedTab nav-link active" data-toggle="tab" href="#reflectedDescription" role="tab">Nedir ?</a></li>
            <li class="nav-item"><a class="reflectedTab nav-link" data-toggle="tab" href="#reflectedScenario_1" role="tab">Örnek 1</a></li>
            <li class="nav-item"><a class="reflectedTab nav-link" data-toggle="tab" href="#reflectedScenario_2" role="tab">Örnek 2</a></li>
            <li class="nav-item"><a class="reflectedTab nav-link" data-toggle="tab" href="#reflectedScenario_3" role="tab">Örnek 3</a></li>
            <li class="nav-item"><a class="reflectedTab nav-link" data-toggle="tab" href="#reflectedScenario_4" role="tab">Örnek 4</a></li>
        </ul>
        <div class="tab-content">
            @* Reflected XSS Description *@
            <div class="tab-pane reflectedTabContent active" id="reflectedDescription">
                <b>Reflected XSS Nedir ?</b>
                <p class="mt-3">Türkçeye çeviri yapıldığında 'Yansıyan' yada 'Yansıtılmış' gibi anlamlara gelse de Reflected tipi XSS türleri arasında zararsız olanı diyebiliriz.</p>
                <p>Reflected XSS kalıcı olmayan ve sadece zararlı scripti çalıştıran kullanıcı için geçerli olan bir zafiyettir.</p>
                <p>Ayrıca bu XSS türü en yaygın olarak görülen XSS türüdür.</p>
            </div>
            @* Reflected XSS Scenario_1 *@
            <div class="tab-pane reflectedTabContent" id="reflectedScenario_1">
                <b>Scriptlerin Dünyası</b>
                <p class="mt-3">En basit şekil ile açıklamak gerekirse Reflected XSS <code>alert('Alert Butonuna tıklandı!');</code> kodu ile test edilebilir.</p>
                <p>Yani zararlı script browser üzerinde herhangi bir şekilde çalıştırılabiliyorsa Reflected XSS oraya çıkmıştır.</p>
                <p>Konuyu daha iyi anlamak için lütfen Örnek 2 sekmesindeki örneği inceleyiniz.</p>
                <button class="btn btn-sm btn-danger" style="margin-left:10px;" onclick="reflectedXSSAlert()">Alert Butonu</button>
                <script>
                    function reflectedXSSAlert() {
                        alert('Alert Button was clicked!');
                    }
                </script>
            </div>
            @* Reflected XSS Scenario_2 *@
            <div class="tab-pane reflectedTabContent" id="reflectedScenario_2">
                <b>Arama Butonu</b>
                <p class="mt-3">Günümüz web sitelerinin bir çoğu arama butonu ile web sitesi içerisindeki bilgileri kullanıcılara hızlı bir şekilde sunuyorlar.</p>
                <p>Özellikle son zamanlarda girilen karakter sayısına göre arama yapıldığını ve hemen arkasından  girilen değer ekrana yansıtıldığı zaman Reflected XSS ortaya çıkması kaçınılmazdır! </p>
                <b>Uygulama</b>
                <p class="mt-3">Aşağıda görülen textbox içerisine aranmak istenen ifade girilip 'Search!' butonu tetiklendiğinde aranılan kelime ekranda gösterilmektedir.</p>
                <p><code>Bahadır</code> &nbsp;<span class="label label-success">Örnek</span></p>
                <p>Normal ifadeler yerine öncelikle HTML üzerinde kalın(&lt;b /&gt;) yada italik(&lt;i /&gt;) yazabileceğimiz taglar ile deneyebilirsiniz.</p>
                <p><code>&lt;b&gt;Bahadır&lt;/b&gt;</code>&nbsp;<span class="label label-success">Örnek</span> Görüleceği üzere aranılan kelime kalın yazılarla yazılacaktır.</p>
                <p>Son olarak herhangi bir tag kısıtlaması da olmadığını test ettiğimizde Reflected XSS için örnek oluşturabiliriz.</p>
                <p><code>&lt;script&gt;alert("Hey,This is a Reflected XSS!")&lt;/script&gt;</code>&nbsp;<span class="label label-success">Örnek</span>Görüleceği gibi textbox alanına yazılan scriptin çalıştığını göreceksiniz.</p>

                <p id="searchingWord">Aradığınız Kelime : </p>
                <div class="input-group">
                    <input type="email" id="searchText" class="form-control" placeholder="Aranacak Kelime Giriniz...">
                    <span class="input-group-btn">
                        <button type="button" class="btn btn-primary" onclick="reflectedXSSSearch($('#searchText').val())">Search!</button>
                    </span>
                </div>
                <script>
                    function reflectedXSSSearch(param) {
                        $('#searchingWord').html('Aradığınız Kelime : ');
                        $('#searchingWord').append(param);
                    }
                </script>
            </div>
            @* Reflected XSS Scenario_3 *@
            <div class="tab-pane reflectedTabContent" id="reflectedScenario_3">
                <div class="nav-tabs-custom">
                    <ul class="nav nav-tabs bg-light" role="tablist">
                        <li class="nav-item"><a class="nav-link" data-toggle="tab" href="#reflectedScenario_3_description" role="tab">Yetkisiz Yetkili</a></li>
                        <li class="nav-item"><a class="nav-link" data-toggle="tab" href="#reflectedScenario_3_login" role="tab">Giriş Paneli</a></li>
                        <li class="nav-item"><a class="nav-link" data-toggle="tab" href="#reflectedScenario_3_register" role="tab">Kayıt Paneli</a></li>
                        <li class="nav-item"><a class="nav-link" data-toggle="tab" href="#reflectedScenario_3_protectionMethod" ondblclick="reflectedXSS_deleteUser(0); return false;" role="tab">Korunma Yöntemleri</a></li>
                    </ul>
                    <div class="tab-content">
                        @* Reflected XSS Scenario_3 Description *@
                        <div class="tab-pane" id="reflectedScenario_3_description">
                            <b>Açıklama</b>
                            <p>
                                Yetkisiz yetkilendirme yani işlemi yapmaya yetkisi olmayıp bu işlemi yetkisi olan bir kullanıcıya yaptırmak.
                                Kısacası yetkisi olan bir kullanıcı herhangi bir şekilde zararlı scripti çalıştırırsa saldırganın istediği gerçekleşmiş olacaktır.
                            </p>
                            <p>
                                Bir örnekle açıklamak gerekirse kullanıcı silme işlemi için oluşturulan bir form yetkisi olan kullanıcı tarafından göndertilebilirse
                                saldırgan istediği kullanıcıyı silebilecektir.Bu saldırı stored tipinde değildir çünkü tüm kullanıcılar etkilenmeyecektir.
                            </p>

                            <b>Uygulama</b>
                            <p>
                                Açıklamada verilen örnekten yola çıkarak kullanıcıların listelendiği ve sadece Admin rolüne sahip bir kullanıcı tarafından silenebildiği
                                bir uygulamada eğer ki Admin yetkisine sahip bir kullanıcıya herhangi bir şekilde kullanıcı silen scripti çalıştırtabilirsek kullanıcı silinmiş olacaktır.
                            </p>

                            <b>Not</b>
                            <p>
                                Lütfen sisteme kayıt olurken herhangi bir zararlı script göndermeyiniz.Zira o saldırı tipi Stored XSS tipinde olacağı için oluştrulacak örnek
                                Stored XSS bölümünde 3.senaryoda anlatılmıştır.
                            </p>
                        </div>
                        @* Reflected XSS Scenario_3 Login Panel *@
                        <div class="tab-pane" id="reflectedScenario_3_login">

                            <div class="card">
                                <div class="card-header bg-success"><i class="icon-user"></i> Giriş Paneli <span class="pull-right">Server Side Code > ASP.NET MVC > Controllers > XssController - RXSS_S3_Login()</span></div>
                                <form action="#" class="form-horizontal" onsubmit="getUserInformation($('#reflected_scenario_3_Email').val(), $('#reflected_scenario_3_Pasword').val()); return false;">
                                    <div class="card-body">
                                        <div class="form-group row">
                                            <label class="col-md-1 col-form-label" for="reflected_scenario_3_Email">Email</label>
                                            <div class="col-md-5">
                                                <input type="email" id="reflected_scenario_3_Email" class="form-control mb-sm-2" placeholder="example@example.com" required>
                                                <span> Demo Admin User Email <code>admin@devf.com</code></span>
                                                <span> Demo Normal User Email <code>demo@devf.com</code></span>
                                            </div>
                                            <label class="col-md-1 col-form-label" for="reflected_scenario_3_Pasword">Parola</label>
                                            <div class="col-md-5">
                                                <input type="password" id="reflected_scenario_3_Pasword" class="form-control mb-sm-2" placeholder="•••••••" required>
                                                <span> Demo Admin User Parola <code>123</code></span>
                                                <span> Demo Normal User Parola <code>456</code></span>
                                            </div>
                                        </div>

                                    </div>
                                    <div class="card-footer">
                                        @*<button type="button" onclick="getUserInformation('admin@devf.com','123')" class="btn btn-sm btn-info"><i class="fa fa-dot-circle-o"></i> Admin Girişi</button>*@
                                        <button id="reflected_scenario_3_login" type="submit" class="btn btn-sm btn-success"><i class="icons icon-login"></i> Giriş Yap</button>
                                        <button type="reset" class="btn btn-sm btn-danger"><i class="fa fa-paint-brush"></i> Temizle</button>
                                    </div>
                                </form>
                            </div>
                            <script>
                                function getUserInformation(param1, param2) {

                                    var success = function (returnData) {
                                        if (returnData.length > 468) {
                                            $('#scenario_3_userList').html(returnData);
                                        }
                                    };

                                    var form = new FormData();
                                    form.append("RXSS_S3_LoginRequest_Email", param1)
                                    form.append("RXSS_S3_LoginRequest_Password", param2)
                                    devf.AjaxHTMLRequest('POST', form, "html", '/XSS/RXSS_S3_Login', success, '#reflected_scenario_3_login');
                                };

                                function reflectedXSS_deleteUser(param1) {

                                    var success = function (returnData) {
                                        if (returnData[0].length > 468 && returnData[1].IsSuccess) {
                                            $('#scenario_3_userList').html(returnData[0]);
                                            devf.Swal("User Delete", returnData[1].Message, "success", "Close");
                                        } else {
                                            devf.Swal(returnData[1].ResponseCode, returnData[1].Message, "error", "Close");
                                        }
                                        
                                    };

                                    var form = new FormData();
                                    form.append("UserID", param1);
                                    devf.AjaxHTMLRequest('POST', form, "json", '/XSS/RXSS_S3_Delete', success);

                                }
                            </script>
                            @* Reflected XSS Scenario_3 User List *@
                            <div id="scenario_3_userList"></div>
                        </div>
                        @* Reflected XSS Scenario_3 Register Panel *@
                        <div class="tab-pane" id="reflectedScenario_3_register">
                            <div class="card">
                                <div class="card-header bg-primary"> Kayıt Paneli </div>
                                <form action="#" class="form-horizontal" onsubmit="userRegister(); return false;">
                                    <div class="card-body">

                                        <div class="form-group row">
                                            <label class="col-md-3 col-form-label" for="reflected_scenario_3_register_name">İsim</label>
                                            <div class="col-md-9">
                                                <input type="text" id="reflected_scenario_3_register_name" class="form-control" placeholder="John" required>
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label class="col-md-3 col-form-label" for="reflected_scenario_3_register_surname">Soyisim</label>
                                            <div class="col-md-9">
                                                <input type="text" id="reflected_scenario_3_register_surname" class="form-control" placeholder="Bill" required>
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label class="col-md-3 col-form-label" for="reflected_scenario_3_register_email">Email</label>
                                            <div class="col-md-9">
                                                <input type="email" id="reflected_scenario_3_register_email" class="form-control" placeholder="example@example.com" required>
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label class="col-md-3 col-form-label" for="reflected_scenario_3_register_pasword">Parola</label>
                                            <div class="col-md-9">
                                                <input type="password" id="reflected_scenario_3_register_pasword" class="form-control" placeholder="•••••••" required>
                                            </div>
                                        </div>

                                    </div>
                                    <div class="card-footer">
                                        <button id="reflected_scenario_3_register" type="submit" class="btn btn-sm btn-primary"><i class="fa fa-user-plus"></i> Kayıt Ol</button>
                                        <button type="reset" class="btn btn-sm btn-danger"><i class="fa fa-paint-brush"></i> Sıfırla</button>
                                    </div>
                                    <div id="registerReCaptcha"></div>

                                </form>
                            </div>
                            <script>
                                function userRegister() {
                                    var success = function (returnData) {
                                        if (returnData[0].length > 468 && returnData[1].IsSuccess) {
                                            $('#scenario_3_userList').html(returnData[0]);
                                            devf.Swal("User Register", returnData[1].Message, "success", "Close");
                                            grecaptcha.reset(registerReCaptcha);
                                        } else {
                                            devf.Swal(returnData[1].ResponseCode, returnData[1].Message, "error", "Close");
                                            grecaptcha.reset(registerReCaptcha);
                                        }
                                    }
                                    var form = new FormData();
                                    form.append("RXSS_S3_RegisterRequest_UserName", $('#reflected_scenario_3_register_name').val());
                                    form.append("RXSS_S3_RegisterRequest_UserSurname", $('#reflected_scenario_3_register_surname').val());
                                    form.append("RXSS_S3_RegisterRequest_Email", $('#reflected_scenario_3_register_email').val());
                                    form.append("RXSS_S3_RegisterRequest_Password", $('#reflected_scenario_3_register_pasword').val());
                                    form.append("RXSS_S3_RegisterRequest_gReCaptcha", grecaptcha.getResponse(registerReCaptcha));
                                    devf.AjaxHTMLRequest('POST', form, "json", '/XSS/RXSS_S3_Register', success, '#reflected_scenario_3_register');

                                }

                            </script>
                        </div>
                        @* Reflected XSS Scenario_4 Protection Method *@
                        <div class="tab-pane" id="reflectedScenario_3_protectionMethod">
                            <b>Açıklama</b>
                            <p class="mt-3">
                                Bu sayfa Admin yetkisine sahip bir kullanıcının girmemesi gereken bir sayfa olarak tasarlanmıştır! Yani saldırgan yetkisi olmadığı halde
                                kullanıcıları silen fonksiyonu yetkili olan kullancıya tetikletmek istediği bir sayfa olarak düşünebiliriz.
                            </p>
                            <b>Örnek</b>
                            <p class="mt-3">
                                Saldırgan XX ID sine sahip kullanıcıyı silmek istediğinde aslında <code>'/XSS/RXSS_S3_Delete'</code> buradaki fonksiyonu çalıştırmaktadır fakat
                                yetkisi olmadığından bu işlem gerçekleşmeyecektir.Admin yetkisine sahip herhangi bir kullanıcı bu fonksiyonu çalıştırırsa kullanıcı silinecektir.
                                Saldırgan da Admin yetkisi olan bir kullanıcıyı zararlı scriptin bulunduğu bir sayfaya herhangi bir şekilde ulaştırırsa istediği kullanıcıyı sildirmiş olmaktaır.
                                Buradaki örnek kullanıcı silmek olabilir fakat anlaşılması gereken kısım şudur ki bu yöntem ile aslında yetkiniz olmayan her şeyi yetkisi olan kullanıcıya yaptırtabilirsiniz.
                            </p>
                            <b>Not</b>
                            <p class="mt-3">
                               Şuan aktif olan taba iki kere tıklarsanız otomatik olarak <code>'/XSS/RXSS_S3_Delete'</code> bu URL'e bir istek gönderilir.Bunu test edebilmek için önce belirlediğiniz bir kullanıcıyı silmek için 
                               Admin yetkisi bulunmayan bir kullanıcı ile tabı açın.Daha sonra tekrar kullanıcı listesine baktığınızda herhangi bir değişiklik göremeyeceksiniz.Fakat daha sonra Admin yetkisi 
                               bulunan bir kullanıcı ile giriş yapıp bu tabı açtığınızda kullanıcının silindiğini farkedeceksinizdir.Görüldüğü gibi Admin yetkisi bulunan kullanıcının hiçbir şeyden haberi olmadan 
                               kullanıcıyı silmiş oldu.Bu uygulamayı test etmeden önce lütfen sayfada bulunan(F12 ile sayfayı görüntüleyebilirsiniz ve düzenleyebilirsiniz) <code>reflectedXSS_deleteUser(X)</code> 
                                fonksiyonunda X görülen yere silmek istediğiniz kullanıcı ID'sini giriniz.
                            </p>
                        </div>
                    </div>
                </div>
            </div>
            @* Reflected XSS Scenario_4 *@
            <div class="tab-pane reflectedTabContent" id="reflectedScenario_4">
                <b>Senaryo 4</b>
                <p>
                    Exactly like the original bootstrap tabs except you should use
                    the custom wrapper <code>.nav-tabs-custom</code> to achieve this style.
                </p>

            </div>
        </div>
    </div>
</div>
